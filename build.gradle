plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.2'
}

allprojects {

    group 'org.example'
    version '1.0-SNAPSHOT'
    sourceCompatibility = '17'
    targetCompatibility = '17'
    //compileJava.options.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }

}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

bootJar {
    enabled = false
}
jar {
    enabled = true
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
        implementation 'com.mysql:mysql-connector-j'
        compileOnly 'org.projectlombok:lombok'

        runtimeOnly 'com.mysql:mysql-connector-j'

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

        // jwt 설정
        implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
        runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
        runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

        // swagger 설정
        implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.1.0'
        testImplementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-api', version: '2.1.0'

        // Mail 설정
        implementation 'org.springframework.boot:spring-boot-starter-mail'
        implementation 'org.apache.commons:commons-lang3:3.12.0'

        // aws 설정
        implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    }

    test {
        useJUnitPlatform()
    }
}

project(':ideac-core') {

    // core 에서는 bootjar로 패키징 할 필요가 없으므로 추가
    bootJar {
        enabled = false
    }

    jar {
        enabled = true
    }

    dependencies {
    }

}

project(':ideac-user') {

    bootJar {
        enabled = true
    }

    jar {
        enabled = false
    }

    dependencies {
        // 컴파일시 core 모듈을 가져온다.
        implementation project(':ideac-core')
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    }

    springBoot {
        mainClass = 'depth.main.ideac.IdeacUserApplication' // 메인 클래스명
    }

}

project(':ideac-admin') {

    bootJar {
        enabled = true
    }

    jar {
        enabled = false
    }

    dependencies {
        implementation project(':ideac-core')
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    }

    springBoot {
        mainClass = 'depth.main.ideac.IdeacAdminApplication' // admin 모듈의 메인 클래스명
    }
}
